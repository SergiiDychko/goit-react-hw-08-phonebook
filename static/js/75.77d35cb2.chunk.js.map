{"version":3,"file":"static/js/75.77d35cb2.chunk.js","mappings":"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","sources":["components/Button/Styles.js","components/Button/Button.jsx","components/ContactForm/Styles.js","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactItem/Styles.js","components/ContactsList/ContactItem/ContactItem.jsx","components/ContactsList/Styles.js","components/Notification/Styles.js","components/Notification/Notification.jsx","components/ContactsList/ContactList.jsx","components/SearchInput/Styles.js","components/SearchInput/SearchInput.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","pages/Phonebook.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 6px;\r\n  padding: 10px 10px;\r\n  background-color: darkseagreen;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  color: whitesmoke;\r\n  :hover {\r\n    box-shadow: inset 0px 0px 10px 5px rgba(0, 0, 0, 0.1);\r\n  }\r\n`;","import PropTypes from 'prop-types';\r\nimport { StyledButton } from './Styles';\r\n\r\nconst Button = ({title, type='button', onClick }) => { return (\r\n  <StyledButton className=\"btn\" type={type} onClick={onClick}>\r\n    {title}\r\n  </StyledButton>\r\n);}\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;","import styled from 'styled-components';\r\n\r\nexport const StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n\r\n  .labelTitle {\r\n    font-size: 24px;\r\n    white-space: nowrap;\r\n    margin-right: 20px;\r\n  }\r\n  .formLabel {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .inputTag {\r\n    height: 35px;\r\n    width: 100%;\r\n    border: 2px solid lightgray;\r\n    border-radius: 6px;\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { Notify } from 'notiflix';\r\nimport { addContact } from '../../redux/contacts/operations';\r\nimport Button from '../Button';\r\nimport { StyledForm } from './Styles';\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contacts = useSelector(state => state.contacts.items);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    if (\r\n      contacts.find(\r\n        contact => contact.name.toLowerCase() === name.toLowerCase()\r\n      )\r\n    ) {\r\n      Notify.failure(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    dispatch(addContact({ name: name, number: number }));\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const handleChange = evt => {\r\n    const { name, value } = evt.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return console.log('Something went wrong');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={handleSubmit}>\r\n      <label className=\"formLabel\">\r\n        <span className=\"labelTitle\">Name:</span>\r\n        <input\r\n          className=\"inputTag\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          onChange={handleChange}\r\n          value={name}\r\n          required\r\n        />\r\n      </label>\r\n      <label className=\"formLabel\">\r\n        <span className=\"labelTitle\">Number:</span>\r\n        <input\r\n          className=\"inputTag\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          onChange={handleChange}\r\n          value={number}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <Button title=\"Add contact\" type=\"submit\" />\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledContact = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  .contactName {\r\n    display: block;\r\n    width: 60%;\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n  }\r\n  .contactNumber {\r\n    width: 40%;\r\n    text-decoration: none;\r\n    font-size: 16px;\r\n    color: darkgreen;\r\n  }\r\n  .contactNumber:hover {\r\n    color: darkseagreen;\r\n    text-decoration: underline;\r\n  }\r\n`\r\n","import PropTypes from 'prop-types';\r\nimport { StyledContact } from './Styles';\r\nconst ContactItem = ({name, number}) => {\r\n    return (\r\n      <StyledContact>\r\n        <p className=\"contactName\">{name}:</p>\r\n        <a className=\"contactNumber\" href={'tel:' + number}>\r\n          {number}\r\n        </a>\r\n      </StyledContact>\r\n    );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactItem;","import styled from 'styled-components';\r\n\r\nexport const StyledList = styled.ul`\r\n  margin: 0 auto;\r\n  border: 2px solid rgba(0, 0, 0, 0.2);\r\n  border-radius: 6px;\r\n  overflow: hidden;\r\n  .listItem {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 10px 20px;\r\n  }\r\n  li:nth-child(odd) {\r\n    background-color: rgb(245, 245, 245);\r\n  }\r\n\r\n  .notification {\r\n    font-size: 18px;\r\n    text-align: center;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledNotification = styled.p`\r\n  margin: 0 auto;\r\n\ttext-align: center;\r\n  font-size: 18px;\r\n  color: darkred;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { StyledNotification } from './Styles';\r\n\r\nconst Notification = ({ text }) => (\r\n  <StyledNotification>{text}</StyledNotification>\r\n);\r\n\r\nNotification.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n}\r\nexport default Notification;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { fetchContacts, deleteContact } from '../../redux/contacts/operations';\r\n\r\nimport ContactItem from './ContactItem';\r\nimport { StyledList } from './Styles';\r\nimport Loader from '../Loader/Loader';\r\nimport Notification from '../Notification';\r\nimport Button from '../Button';\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(state => state.contacts.items);\r\n  const filter = useSelector(state => state.filter);\r\n  const loading = useSelector(state => state.isLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const filteredContacts = () =>\r\n    contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n\r\n  const contactsList = filter ? filteredContacts() : contacts;\r\n\r\n  return (\r\n    <>\r\n      {loading && Loader}\r\n      {contactsList.length ? (\r\n        <StyledList>\r\n          {contactsList.map(({ id, name, number }) => (\r\n            <li className=\"listItem\" key={id}>\r\n              <ContactItem name={name} number={number} />\r\n              <Button\r\n                title=\"Delete\"\r\n                onClick={() => dispatch(deleteContact(id))}\r\n              />\r\n            </li>\r\n          ))}\r\n        </StyledList>\r\n      ) : (\r\n        <Notification\r\n          text={filter ? 'Could not find this name' : 'Contact list is empty'}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledInput = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 500px;\r\n  margin: 0 auto 20px;\r\n\r\n  .inputTitle {\r\n    font-size: 24px;\r\n    white-space: nowrap;\r\n    margin-right: 20px;\r\n  }\r\n  .inputTag {\r\n    height: 35px;\r\n    width: 100%;\r\n    border: 2px solid lightgray;\r\n    border-radius: 6px;\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n  }\r\n  .formInput {\r\n    padding: 8px;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { change } from '../../redux/contacts/slice';\r\n\r\nimport { StyledInput } from './Styles';\r\n\r\nconst SearchInput = () => {\r\n  const filter = useSelector(state => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = evt => dispatch(change(evt.target.value));\r\n\r\n  return (\r\n    <StyledInput>\r\n      <p className=\"inputTitle\">Filter by name:</p>\r\n      <input\r\n        className=\"inputTag\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        title=\"Please enter the name\"\r\n        onChange={handleChange}\r\n        value={filter}\r\n      />\r\n    </StyledInput>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Section_container__xuK5S\",\"title\":\"Section_title__Nl1uF\"};","import PropTypes from 'prop-types';\r\nimport css from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className={css.container}>\r\n      <h2 className={css.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport default Section;","import ContactForm from '../components/ContactForm';\r\nimport ContactList from '../components/ContactsList';\r\nimport SearchInput from '../components/SearchInput';\r\nimport Section from '../components/Section';\r\n\r\nconst Phonebook = () => {\r\n  return (\r\n    <>\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        <SearchInput />\r\n        <ContactList />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Phonebook;"],"names":["StyledButton","styled","title","type","onClick","className","StyledForm","useState","name","setName","number","setNumber","contacts","useSelector","state","items","dispatch","useDispatch","handleChange","evt","target","value","console","log","onSubmit","preventDefault","find","contact","toLowerCase","Notify","addContact","pattern","onChange","required","Button","StyledContact","href","StyledList","StyledNotification","text","filter","loading","isLoading","useEffect","fetchContacts","contactsList","includes","Loader","length","map","id","deleteContact","StyledInput","change","children","css"],"sourceRoot":""}